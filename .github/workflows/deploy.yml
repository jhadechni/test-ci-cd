name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        id: build
        run: |
          docker build \
            --build-arg REACT_APP_BACKEND_URL=${{ secrets.REACT_APP_BACKEND_URL }} \
            -t ${{ secrets.DOCKER_USERNAME }}/my-react-app:${{ github.sha }} .
          echo "::set-output name=image_sha::${{ github.sha }}"

      - name: Tag and push Docker image
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/my-react-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-react-app:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest

      - name: Copy deploy.env to droplet
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          source: "deploy.env"
          target: "/deploy.env"

      - name: SSH into DigitalOcean droplet and deploy
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            echo "SSH connection successful!"
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest
            if [ "$(docker ps -q -f name=my-react-app)" ]; then
              echo "Stopping existing container..."
              docker stop my-react-app
              docker rm my-react-app
            fi
            echo "Starting new container..."
            docker run -d -p 80:80 --name my-react-app --env-file /deploy.env ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest

