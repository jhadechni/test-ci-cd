name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_sha: ${{ steps.build.outputs.image_sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        id: build
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-react-app:${{ github.sha }} .
          echo "::set-output name=image_sha::${{ github.sha }}"

  tag:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and push Docker image
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/my-react-app:${{ needs.build.outputs.image_sha }} ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-react-app:${{ needs.build.outputs.image_sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: SSH into DigitalOcean droplet
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest
            docker stop my-react-app || true
            docker rm my-react-app || true
            docker run -d -p 80:80 --name my-react-app ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest
            echo "Deployed successfully :)"